1> to find terminal search terminal in left top search option.
$ sudo apt-get install git
$ sudo apt-get install synaptic
$ sudo apt-get install gitg


2> $ git init
initialized empty Git repository in /home/rgunijan/.git/


3> $ git clone git://github.com/rgunijan/Demo.git
cloning into Demo
or https://github.com/rgunijan/Demo.git

4> Check for .gitignore file by opening FileExplorer and making invisible 
files visible by "Ctrl+H"

$ git status

Will show all unwanted untracked files/ folders
Add them to ignore list.
http://www.vogella.com/tutorials/Git/article.html

5>Vim

In vim there are 3 different modes:

Insert - allows typing and editing as normal
Visual - used for selecting copy/paste etc.
Normal - used for commands
To get back to Normal mode, you can always press esc.

Once you are at Normal mode Press : to begin your command (you'll see it appear in the bottom left). The following commands are related to quiting vim:

:q - quit if no changes were made
:q! - quit and destroy any changes made
:wq - write changes (save) and quit
:x - similar to :wq, only write the file if changes were made, then quit


6> $ git config --global user.email "rgunijan@gmail.com"
   $ git config --global user.name "rgunijan"


7> $ git add Notes.txt (go to Demo folder first by cd Demo)

8> $ git commit -m "Commit comment"

9> $ git push  (this will work only if git clone is done from https)

Check on github.com/rgunijan/Demo

10> $ git fetch --all
    $ git reset --hard origin/master

git fetch downloads the latest from remote without trying to merge or rebase anything.

Then the git reset resets the master branch to what you just fetched. 
The --hard option changes all the files in your working tree to match 
the files in origin/master, so if you have any local changes, 
they will be lost. With or without --hard, any local commits 
that haven't been pushed will be lost.

   
11> $ git clean -f
    $ git pull

To delete all untracked files and then continue with usual git pull.
If the Git configuration variable clean.requireForce is not set to false, 
git clean will refuse to run unless given -f, -n or -i.
 

12> $ git branch
    For local branchesgit 
    * master

    $ git branch -r
    Remote-tracking branches
    origin/HEAD -> origin/master
    origin/master

13> Don’t use git pull, use git fetch and then git merge.g

14> $ git remote -v
    origin https://github.com/rgunijan/Demo2.git (fetch)
    origin https://github.com/rgunijan/Demo2.git (push)

15> $ git remote add origin https://github.com/rgunijan/Demo2.git

Create a new repository on the command line

touch README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/rgunijan/Demo2.git
git push -u origin master

Push an existing repository from the command line

git remote add origin https://github.com/rgunijan/Demo2.git
git push -u origin master


16> $ git commit -a -m "Comment"
-a allows to commit without stagin a file using add, does staging plus commit

17> $ git commit --amend
--amend allows file to be added in previous commit operation.

18> $ git reset HEAD readme.txt

removes accidentally committed file.
File will be modified but unstaged. 


19> $ git checkout -- readme.txt
Discards the changes made.

20> Working wth Remotes

$ git clone https://github.com/rgunijan/Demo.git
$ cd Demo
$ git remote
$ git remote -v
$ git remote add origin https://github.com/rgunijan/Demo.git
$ git fetch origin
$ git push origin master
$ git remote show origin
